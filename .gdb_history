p
l
file
exit
q
p
l
l
run
q
b phyaddr_mapto_pageaddr 
run
p
l
n
q
l
file
b main
q
l
l
q
l
l
l
b read_32 
r
n
n
dashboard 
n
dashboard -layout !assembly 
n
r
n
b read_32
r
q
q
b read_32 
r
dashboard -layout breakpoints source stack variables 
dashboard -layout expressions breakpoints source stack variables
dashboard -layout history breakpoints source stack variables
q
b read_32 
l
r
q
dashboard breakpoints 
dashboard breakpoints 
dashboard expressions 
dashboard history 
dashboard memory 
dashboard threads 
b read_32 
r
dashboard registers 
dashboard assembly 
n
dashboard -e
dashboard --help
help dashboard 
dashboard -configuration save
dashboard -style
q
b read_32
r
dashboard -layout !assembly breakpoints !expressions !history !memory !registers source stack !threads variables
dashboard -configuration 
b
n
n
n
n
n
b
n
dashboard -configuration 
q
n
n
n
n
n
n
n
c
n
dashboard -configuration 
q
dashboard -layout !assembly breakpoints !expressions !history !memory !registers source stack !threads variables
b read_32 
n
r
dashboard -layout 
dashboard history 
n
dashboard -configuration ~/gdbtest
q
b main 
n
r
n
r
q
python
python
from pygments.styles import *
for style in get_all_styles():
    command = 'dashboard -style syntax_highlighting {!r}'.format(style)
    gdb.execute(command)
    print(command)
    if input('Use this style? (y/N) ') == 'y':
        break
end
python
from pygments.styles import *
for style in get_all_styles():
    command = 'dashboard -style syntax_highlighting {!r}'.format(style)
    gdb.execute(command)
    print(command)
    if input('Use this style? (y/N) ') == 'y':
        break
end
nn
n
n
b main
r
python
from pygments.styles import *
for style in get_all_styles():
    command = 'dashboard -style syntax_highlighting {!r}'.format(style)
    gdb.execute(command)                                               
    print(command)
    if input('Use this style? (y/N) ') == 'y':
        break
end
n
r
dashboard -style syntax_highlighting trac
dashboard -style trac
from pygments.styles import *
for style in get_all_styles():
    command = 'dashboard -style syntax_highlighting {!r}'.format(style)
    gdb.execute(command)                                               
    print(command)
    if input('Use this style? (y/N) ') == 'y':
        brea;
dashboard -style syntax_highlighting 'trac'
dashboard -style syntax_highlighting 'paraiso-dark'
dashboard -style syntax_highlighting 'monika'
q
q
b main
r
q
